package DSACoding;

public class Sorted2DBinarySearch {

	static int[] binarySearch(int arr[][], int target, int row, int colStart, int colEnd) {
		while(colStart<=colEnd) {
			int mid=colStart+(colEnd-colStart)/2;
			if(arr[row][mid]==target) {
				return new int[] {row, mid};
			}
			else if(arr[row][mid]<target) {
				colStart=mid+1;
			}
			else {
				colEnd=mid-1;
			}
			
		}
		return new int[] {-1,-1};
	}
	
	
	static int[] findMid(int arr[][], int start, int target, int colLength) {
		int rows=arr.length;
		int cols=arr[0].length;//matrix may be empty
		
		if(rows==1) {
			return binarySearch(arr, target, 0, 0, cols-1);
		}

	}
	public static void main(String[] args) {
		
	}
}
