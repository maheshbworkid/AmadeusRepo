package DSACoding;

import java.util.Arrays;

public class TwoDSortedBinarySearch {
	


	public static void main(String[] args) {
		int arr[][]= {
				{1,2,3},
				{4,5,6},
				{7,8,9}
		};
		int target=6;
		System.out.println(Arrays.toString(search(arr, target)));
	}
	
	static int[] binarySearch(int arr[][], int target, int row, int colStart, int colEnd) {
		while(colStart<=colEnd) {
			int mid=colStart+(colEnd-colStart)/2;
			if(arr[row][mid]==target) {
				return new int[] {row, mid};
			}
			if(arr[row][mid]<target) {
				colStart=mid+1;
			}
			else {
				colEnd=mid-1;
			}		
		}
		return new int[] {-1,-1};
	}	
	
	static int[] search(int arr[][], int target) {
		int rows=arr.length;
		int cols=arr[0].length;//matrix may be empty
		int rowStart=0;
		int rowEnd=rows-1;
		int colMid=	cols/2;
		
		if(rows==1) {
			return binarySearch(arr, target, 0, 0, cols-1);
		}
		
	}
	
}
